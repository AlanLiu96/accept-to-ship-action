name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main, "[0-9]+-[0-9]+-*"]
  workflow_run:
    workflows: ["Build for Dependabot"]
    types:
      - completed
  workflow_dispatch:

jobs:
  build:
    name: Build
    if: |-
      ${{
        !startsWith(github.head_ref, 'workflows/tests/') && (
          (github.event_name == 'push' && github.actor != 'dependabot[bot]') ||
          (github.event_name == 'pull_request' && github.actor != 'dependabot[bot]') ||
          (github.event_name == 'workflow_run' && github.actor == 'dependabot[bot]')
        )
      }}
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Create check run
        id: create-check-run
        uses: actions/github-script@v6.2.0
        env:
          CHECK_GIT_STATUS_OUTCOME: ${{ steps.check-git-status.outcome }}
        with:
          script: |
            const { info } = core;
            const octokit = github;

            if (context.eventName !== "workflow_run") {
              info(`Event isn't workflow_run: ${context.eventName}`);
              return;
            }

            const response = await octokit.rest.actions.listJobsForWorkflowRun({
              owner,
              repo,
              run_id: context.runId,
            });
            if (response.data.jobs.length !== 1) {
              info(
                `Workflow doesn't have exactly 1 job ${response.data.jobs.length}`
              );
              return;
            }

            const job = response.data.jobs[0];
            info(`Job:`);
            info(`  Job id: ${job.id} (${job.html_url})`);
            info(`  Job name: ${job.name}`);
            info(`Head SHA: ${github.head_sha});
            return await octokit.rest.checks.create({
              ...context.repo,
              head_sha: github.head_sha,
              name: job.name
              details_url: job.details_url,
              status: "in_progress",
            });

      - uses: actions/checkout@v3
        if: ${{ github.event_name != 'workflow_run' }}

      - uses: actions/checkout@v3
        if: ${{ github.event_name == 'workflow_run' }}
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          check-latest: true

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Package
        run: yarn package

      - uses: CatChen/check-git-status-action@v1
        id: check-git-status
        with:
          fail-if-not-clean: ${{ github.actor != 'dependabot[bot]' }}
          push-if-not-clean: true
          github-token: ${{ secrets.CHECK_GIT_STATUS_ACTION_TOKEN }}

      - name: Update check run
        if: ${{ always() }}
        uses: actions/github-script@v6.2.0
        env:
          CHECK_GIT_STATUS_OUTCOME: ${{ steps.check-git-status.outcome }}
          CHECK_RUN_JSON: ${{ steps.create-check-run.outputs.result }}
        with:
          script: |
            const { info } = core;
            const octokit = github;

            if (context.eventName !== "workflow_run") {
              info(`Event isn't workflow_run: ${context.eventName}`);
              return;
            }

            const checkRun = JSON.parse(process.env.CHECK_RUN_JSON);
            info(`Check run id: ${checkRun.id}`);
            await octokit.rest.checks.update({
              ...context.repo,
              check_run_id: checkRun.id,
              status: "completed",
              conclusion: process.env.CHECK_GIT_STATUS_OUTCOME,
            });
